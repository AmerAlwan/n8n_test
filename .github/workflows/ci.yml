name: n8n CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U admin -d test"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    env:
      POSTGRES_ACCOUNT_HOST: localhost
      POSTGRES_ACCOUNT_DATABASE: test
      POSTGRES_ACCOUNT_USER: admin
      POSTGRES_ACCOUNT_PASSWORD: admin
      POSTGRES_ACCOUNT_PORT: 5432
      WORKFLOWS_PATH: workflows
      CREDS_PATH: credentials/credentials.json
      WEBHOOK_URL: http://localhost:5678/webhook/16bc0461-12ad-4933-bb1d-00e0a3fd8cd9

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Install root dependencies
        run: npm install

      - name: Install workflow tester dependencies
        working-directory: n8n-workflow-tester
        run: npm install

      - name: Generate .env file from workflow env variables
        run: |
         echo "POSTGRES_ACCOUNT_HOST=${POSTGRES_ACCOUNT_HOST}" > .env
         echo "POSTGRES_ACCOUNT_DATABASE=${POSTGRES_ACCOUNT_DATABASE}" >> .env
         echo "POSTGRES_ACCOUNT_USER=${POSTGRES_ACCOUNT_USER}" >> .env
         echo "POSTGRES_ACCOUNT_PASSWORD=${POSTGRES_ACCOUNT_PASSWORD}" >> .env
         echo "POSTGRES_ACCOUNT_PORT=${POSTGRES_ACCOUNT_PORT}" >> .env
         echo "WORKFLOWS_PATH=${WORKFLOWS_PATH}" >> .env
         echo "CREDS_PATH=${CREDS_PATH}" >> .env
         echo "WEBHOOK_URL=${WEBHOOK_URL}" >> .env

      - name: Patch credentials.json with env values
        run: |
          cp credentials/credentials.json credentials/credentials.patched.json
          envsubst < credentials/credentials.patched.json > credentials/credentials.patched.json.tmp
          mv credentials/credentials.patched.json.tmp credentials/credentials.patched.json

      - name: Start n8n Docker container
        run: |
          docker pull n8nio/n8n:latest
          docker run -d \
            --name n8n-test \
            -e DB_TYPE=postgresdb \
            -e DB_POSTGRESDB_HOST=localhost \
            -e DB_POSTGRESDB_DATABASE=test \
            -e DB_POSTGRESDB_USER=admin \
            -e DB_POSTGRESDB_PASSWORD=admin \
            -e N8N_BASIC_AUTH_ACTIVE=false \
            -e N8N_HOST=localhost \
            -e N8N_PORT=5678 \
            -e N8N_PROTOCOL=http \
            -v ${{ github.workspace }}/workflows:/home/node/.n8n/workflows \
            -v ${{ github.workspace }}/credentials:/home/node/.n8n/credentials \
            -p 5678:5678 \
            --health-cmd="curl --fail http://localhost:5678/healthz || exit 1" \
            --health-interval=10s \
            --health-timeout=5s \
            --health-retries=15 \
            n8nio/n8n:latest

      - name: Wait for n8n to be healthy
        run: |
          for i in {1..15}; do
            if curl -s http://localhost:5678/healthz | grep -q "ok"; then
              echo "n8n is healthy"
              exit 0
            fi
            echo "Waiting for n8n to be healthy..."
            sleep 5
          done
          echo "n8n did not become healthy in time"
          docker logs n8n-test
          exit 1

      - name: Import credentials via n8n CLI
        run: |
          docker exec n8n-test n8n import:credentials --input /home/node/.n8n/credentials/credentials.patched.json --overwrite

      - name: Import workflow via n8n CLI
        run: |
          docker exec n8n-test n8n import:workflow --input /home/node/.n8n/workflows/YAHdeeXkYbwOOQJk.json --overwrite

      - name: Run Jest tests
        env:
          N8N_CLI: docker exec n8n-test n8n
        run: npm test

      - name: Show n8n logs on failure
        if: failure()
        run: docker logs n8n-test
