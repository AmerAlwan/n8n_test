name: n8n CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: test
      POSTGRES_ACCOUNT_HOST: db
      POSTGRES_ACCOUNT_DATABASE: test
      POSTGRES_ACCOUNT_USER: admin
      POSTGRES_ACCOUNT_PASSWORD: admin
      POSTGRES_ACCOUNT_PORT: 5432
      WORKFLOWS_PATH: workflows
      CREDS_PATH: credentials/credentials.json
      WEBHOOK_URL: http://localhost:5678/webhook/16bc0461-12ad-4933-bb1d-00e0a3fd8cd9
      OPENROUTER_ACCOUNT_APIKEY: sk
      N8N_HOST: localhost
      N8N_PORT: 5678
      ENV: DEV
      BASE_URL: http://localhost:5678

    services:
      db:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        # Let Actions wait until healthy
        options: >-
          --health-cmd="pg_isready -U ${{ env.POSTGRES_USER }} -d ${{ env.POSTGRES_DB }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=15

      n8n:
        image: n8nio/n8n:latest
        env:
          DB_TYPE: postgresdb
          DB_POSTGRESDB_HOST: db
          DB_POSTGRESDB_PORT: 5432
          DB_POSTGRESDB_DATABASE: ${{ env.POSTGRES_DB }}
          DB_POSTGRESDB_USER: ${{ env.POSTGRES_USER }}
          DB_POSTGRESDB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          N8N_BASIC_AUTH_ACTIVE: 'false'
          N8N_HOST: 0.0.0.0
          N8N_PORT: 5678
          N8N_PROTOCOL: http
        ports:
          - 5678:5678
        # Mount the repo into the container so you can run CLI + npm inside it
        options: >-
          -v ${{ github.workspace }}:/workspace
          --health-cmd="curl --fail http://localhost:5678/healthz || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate .env from template
        run: envsubst < .env.template > .env

      - name: Patch credentials.json with env values
        run: |
          envsubst < credentials/credentials.json > credentials/credentials.patched.json.tmp
          mv credentials/credentials.patched.json.tmp credentials/credentials.json
          cat credentials/credentials.json

      # Grab container IDs for convenient docker exec later
      - name: Get service container IDs
        id: ids
        shell: bash
        run: |
          echo "PG_CID=$(docker ps -q --filter 'ancestor=postgres:15-alpine' | head -n 1)" >> "$GITHUB_OUTPUT"
          echo "N8N_CID=$(docker ps -q --filter 'ancestor=n8nio/n8n:latest' | head -n 1)" >> "$GITHUB_OUTPUT"

      - name: Create users table for tests
        run: |
          docker exec ${{ steps.ids.outputs.PG_CID }} psql -U "${POSTGRES_USER}" -d "${POSTGRES_DB}" -c "
            CREATE TABLE IF NOT EXISTS users (
              id SERIAL PRIMARY KEY,
              username VARCHAR(255) NOT NULL,
              email VARCHAR(255) NOT NULL,
              password VARCHAR(255) NOT NULL,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
          "

      - name: Install root dependencies inside n8n container
        run: |
          docker exec -u root ${{ steps.ids.outputs.N8N_CID }} sh -c "cd /workspace && npm ci"

      - name: Install n8n-workflow-tester dependencies inside n8n container
        run: |
          docker exec -u root ${{ steps.ids.outputs.N8N_CID }} sh -c "cd /workspace/n8n-workflow-tester && npm ci"

      - name: Import credentials via n8n CLI
        run: |
          docker exec -u root ${{ steps.ids.outputs.N8N_CID }} n8n import:credentials --input /workspace/credentials/credentials.json --overwrite

      - name: Import workflow via n8n CLI
        run: |
          docker exec -u root ${{ steps.ids.outputs.N8N_CID }} n8n import:workflow --input /workspace/workflows/YAHdeeXkYbwOOQJk.json --overwrite

      - name: Run Jest tests inside n8n container
        run: |
          docker exec -u root ${{ steps.ids.outputs.N8N_CID }} sh -c "set -a && [ -f /workspace/.env ] && . /workspace/.env && cd /workspace && npm test"

      - name: Show n8n logs on failure
        if: failure()
        run: docker logs ${{ steps.ids.outputs.N8N_CID }}
